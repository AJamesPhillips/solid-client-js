(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{52:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return p}));var a=n(2),b=n(6),r=(n(0),n(88)),i={id:"_thing_set_",title:"thing/set",sidebar_label:"thing/set"},l={unversionedId:"api/modules/_thing_set_",id:"api/modules/_thing_set_",isDocsHomePage:!1,title:"thing/set",description:'@inrupt/solid-client \u203a "thing/set"',source:"@site/docs/api/modules/_thing_set_.md",permalink:"/solid-client-js/docs/api/modules/_thing_set_",editUrl:"https://github.com/inrupt/solid-client-js/edit/master/website/docs/api/modules/_thing_set_.md",sidebar_label:"thing/set",sidebar:"api",previous:{title:"thing/remove",permalink:"/solid-client-js/docs/api/modules/_thing_remove_"},next:{title:"thing/thing",permalink:"/solid-client-js/docs/api/modules/_thing_thing_"}},c=[{value:"Index",id:"index",children:[{value:"Functions",id:"functions",children:[]}]},{value:"Functions",id:"functions-1",children:[{value:"<code>Const</code> setBoolean",id:"const-setboolean",children:[]},{value:"<code>Const</code> setDatetime",id:"const-setdatetime",children:[]},{value:"<code>Const</code> setDecimal",id:"const-setdecimal",children:[]},{value:"<code>Const</code> setInteger",id:"const-setinteger",children:[]},{value:"<code>Const</code> setStringNoLocale",id:"const-setstringnolocale",children:[]},{value:"setStringWithLocale",id:"setstringwithlocale",children:[]},{value:"<code>Const</code> setUrl",id:"const-seturl",children:[]}]}],o={rightToc:c};function p(e){var t=e.components,n=Object(b.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},o,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/solid-client-js/docs/api/index"}),"@inrupt/solid-client")," \u203a ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/solid-client-js/docs/api/modules/_thing_set_"}),'"thing/set"')),Object(r.b)("h2",{id:"index"},"Index"),Object(r.b)("h3",{id:"functions"},"Functions"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"/solid-client-js/docs/api/modules/_thing_set_#const-setboolean"}),"setBoolean")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"/solid-client-js/docs/api/modules/_thing_set_#const-setdatetime"}),"setDatetime")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"/solid-client-js/docs/api/modules/_thing_set_#const-setdecimal"}),"setDecimal")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"/solid-client-js/docs/api/modules/_thing_set_#const-setinteger"}),"setInteger")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"/solid-client-js/docs/api/modules/_thing_set_#const-setstringnolocale"}),"setStringNoLocale")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"/solid-client-js/docs/api/modules/_thing_set_#setstringwithlocale"}),"setStringWithLocale")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"/solid-client-js/docs/api/modules/_thing_set_#const-seturl"}),"setUrl"))),Object(r.b)("h2",{id:"functions-1"},"Functions"),Object(r.b)("h3",{id:"const-setboolean"},Object(r.b)("inlineCode",{parentName:"h3"},"Const")," setBoolean"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"setBoolean"),"(",Object(r.b)("inlineCode",{parentName:"p"},"thing"),": T, ",Object(r.b)("inlineCode",{parentName:"p"},"property"),": string | NamedNode\u2039string\u203a, ",Object(r.b)("inlineCode",{parentName:"p"},"value"),": boolean)"),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Defined in ",Object(r.b)("a",Object(a.a)({parentName:"em"},{href:"https://github.com/inrupt/solid-client-js/blob/c4f2c57/src/thing/set.ts#L83"}),"thing/set.ts:83"))),Object(r.b)("p",null,"Create a new Thing with existing values replaced by the given boolean for the given Property."),Object(r.b)("p",null,"To preserve existing values, see ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/solid-client-js/docs/api/modules/_thing_add_#const-addboolean"}),"addBoolean"),"."),Object(r.b)("p",null,"The original ",Object(r.b)("inlineCode",{parentName:"p"},"thing")," is not modified; this function returns a cloned Thing with updated values."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"thing")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"T"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Thing to set a boolean value on.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"property")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"string ","|"," NamedNode\u2039string\u203a"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Property for which to set the given boolean value.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"value")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"boolean"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Boolean to set on ",Object(r.b)("inlineCode",{parentName:"td"},"thing")," for the given ",Object(r.b)("inlineCode",{parentName:"td"},"property"),".")))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"const-setdatetime"},Object(r.b)("inlineCode",{parentName:"h3"},"Const")," setDatetime"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"setDatetime"),"(",Object(r.b)("inlineCode",{parentName:"p"},"thing"),": T, ",Object(r.b)("inlineCode",{parentName:"p"},"property"),": string | NamedNode\u2039string\u203a, ",Object(r.b)("inlineCode",{parentName:"p"},"value"),": Date)"),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Defined in ",Object(r.b)("a",Object(a.a)({parentName:"em"},{href:"https://github.com/inrupt/solid-client-js/blob/c4f2c57/src/thing/set.ts#L104"}),"thing/set.ts:104"))),Object(r.b)("p",null,"Create a new Thing with existing values replaced by the given datetime for the given Property."),Object(r.b)("p",null,"To preserve existing values, see ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/solid-client-js/docs/api/modules/_thing_add_#const-adddatetime"}),"addDatetime"),"."),Object(r.b)("p",null,"The original ",Object(r.b)("inlineCode",{parentName:"p"},"thing")," is not modified; this function returns a cloned Thing with updated values."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"thing")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"T"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Thing to set an datetime value on.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"property")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"string ","|"," NamedNode\u2039string\u203a"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Property for which to set the given datetime value.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"value")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Date"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Datetime to set on ",Object(r.b)("inlineCode",{parentName:"td"},"thing")," for the given ",Object(r.b)("inlineCode",{parentName:"td"},"property"),".")))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"const-setdecimal"},Object(r.b)("inlineCode",{parentName:"h3"},"Const")," setDecimal"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"setDecimal"),"(",Object(r.b)("inlineCode",{parentName:"p"},"thing"),": T, ",Object(r.b)("inlineCode",{parentName:"p"},"property"),": string | NamedNode\u2039string\u203a, ",Object(r.b)("inlineCode",{parentName:"p"},"value"),": number)"),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Defined in ",Object(r.b)("a",Object(a.a)({parentName:"em"},{href:"https://github.com/inrupt/solid-client-js/blob/c4f2c57/src/thing/set.ts#L125"}),"thing/set.ts:125"))),Object(r.b)("p",null,"Create a new Thing with existing values replaced by the given decimal for the given Property."),Object(r.b)("p",null,"To preserve existing values, see ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/solid-client-js/docs/api/modules/_thing_add_#const-adddecimal"}),"addDecimal"),"."),Object(r.b)("p",null,"The original ",Object(r.b)("inlineCode",{parentName:"p"},"thing")," is not modified; this function returns a cloned Thing with updated values."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"thing")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"T"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Thing to set a decimal value on.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"property")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"string ","|"," NamedNode\u2039string\u203a"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Property for which to set the given decimal value.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"value")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"number"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Decimal to set on ",Object(r.b)("inlineCode",{parentName:"td"},"thing")," for the given ",Object(r.b)("inlineCode",{parentName:"td"},"property"),".")))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"const-setinteger"},Object(r.b)("inlineCode",{parentName:"h3"},"Const")," setInteger"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"setInteger"),"(",Object(r.b)("inlineCode",{parentName:"p"},"thing"),": T, ",Object(r.b)("inlineCode",{parentName:"p"},"property"),": string | NamedNode\u2039string\u203a, ",Object(r.b)("inlineCode",{parentName:"p"},"value"),": number)"),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Defined in ",Object(r.b)("a",Object(a.a)({parentName:"em"},{href:"https://github.com/inrupt/solid-client-js/blob/c4f2c57/src/thing/set.ts#L146"}),"thing/set.ts:146"))),Object(r.b)("p",null,"Create a new Thing with existing values replaced by the given integer for the given Property."),Object(r.b)("p",null,"To preserve existing values, see ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/solid-client-js/docs/api/modules/_thing_add_#const-addinteger"}),"addInteger"),"."),Object(r.b)("p",null,"The original ",Object(r.b)("inlineCode",{parentName:"p"},"thing")," is not modified; this function returns a cloned Thing with updated values."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"thing")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"T"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Thing to set an integer value on.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"property")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"string ","|"," NamedNode\u2039string\u203a"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Property for which to set the given integer value.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"value")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"number"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Integer to set on ",Object(r.b)("inlineCode",{parentName:"td"},"thing")," for the given ",Object(r.b)("inlineCode",{parentName:"td"},"property"),".")))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"const-setstringnolocale"},Object(r.b)("inlineCode",{parentName:"h3"},"Const")," setStringNoLocale"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"setStringNoLocale"),"(",Object(r.b)("inlineCode",{parentName:"p"},"thing"),": T, ",Object(r.b)("inlineCode",{parentName:"p"},"property"),": string | NamedNode\u2039string\u203a, ",Object(r.b)("inlineCode",{parentName:"p"},"value"),": string)"),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Defined in ",Object(r.b)("a",Object(a.a)({parentName:"em"},{href:"https://github.com/inrupt/solid-client-js/blob/c4f2c57/src/thing/set.ts#L196"}),"thing/set.ts:196"))),Object(r.b)("p",null,"Create a new Thing with existing values replaced by the given unlocalised string for the given Property."),Object(r.b)("p",null,"To preserve existing values, see ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/solid-client-js/docs/api/modules/_thing_add_#const-addstringnolocale"}),"addStringNoLocale"),"."),Object(r.b)("p",null,"The original ",Object(r.b)("inlineCode",{parentName:"p"},"thing")," is not modified; this function returns a cloned Thing with updated values."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"thing")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"T"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Thing to set an unlocalised string value on.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"property")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"string ","|"," NamedNode\u2039string\u203a"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Property for which to set the given unlocalised string value.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"value")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"string"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Unlocalised string to set on ",Object(r.b)("inlineCode",{parentName:"td"},"thing")," for the given ",Object(r.b)("inlineCode",{parentName:"td"},"property"),".")))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"setstringwithlocale"},"setStringWithLocale"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"setStringWithLocale"),"\u2039",Object(r.b)("strong",{parentName:"p"},"T"),"\u203a(",Object(r.b)("inlineCode",{parentName:"p"},"thing"),": T, ",Object(r.b)("inlineCode",{parentName:"p"},"property"),": ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/solid-client-js/docs/api/modules/_interfaces_#url"}),"Url")," | ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/solid-client-js/docs/api/modules/_interfaces_#urlstring"}),"UrlString"),", ",Object(r.b)("inlineCode",{parentName:"p"},"value"),": string, ",Object(r.b)("inlineCode",{parentName:"p"},"locale"),": string): ",Object(r.b)("em",{parentName:"p"},"T extends ThingLocal ? ThingLocal : ThingPersisted")),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Defined in ",Object(r.b)("a",Object(a.a)({parentName:"em"},{href:"https://github.com/inrupt/solid-client-js/blob/c4f2c57/src/thing/set.ts#L168"}),"thing/set.ts:168"))),Object(r.b)("p",null,"Create a new Thing with existing values replaced by the given localised string for the given Property."),Object(r.b)("p",null,"To preserve existing values, see ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/solid-client-js/docs/api/modules/_thing_add_#addstringwithlocale"}),"addStringWithLocale"),"."),Object(r.b)("p",null,"The original ",Object(r.b)("inlineCode",{parentName:"p"},"thing")," is not modified; this function returns a cloned Thing with updated values."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Type parameters:")),Object(r.b)("p",null,"\u25aa ",Object(r.b)("strong",{parentName:"p"},"T"),": ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(a.a)({parentName:"em"},{href:"/solid-client-js/docs/api/modules/_interfaces_#thing"}),"Thing"))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"thing")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"T"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Thing to set a localised string value on.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"property")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(a.a)({parentName:"td"},{href:"/solid-client-js/docs/api/modules/_interfaces_#url"}),"Url")," ","|"," ",Object(r.b)("a",Object(a.a)({parentName:"td"},{href:"/solid-client-js/docs/api/modules/_interfaces_#urlstring"}),"UrlString")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Property for which to set the given localised string value.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"value")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"string"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Localised string to set on ",Object(r.b)("inlineCode",{parentName:"td"},"thing")," for the given ",Object(r.b)("inlineCode",{parentName:"td"},"property"),".")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"locale")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"string"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Locale of the added string.")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"T extends ThingLocal ? ThingLocal : ThingPersisted")),Object(r.b)("p",null,"A new Thing equal to the input Thing with existing values replaced by the given value for the given Property."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"const-seturl"},Object(r.b)("inlineCode",{parentName:"h3"},"Const")," setUrl"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"setUrl"),"(",Object(r.b)("inlineCode",{parentName:"p"},"thing"),": T, ",Object(r.b)("inlineCode",{parentName:"p"},"property"),": string | NamedNode\u2039string\u203a, ",Object(r.b)("inlineCode",{parentName:"p"},"url"),": string | NamedNode\u2039string\u203a | DatasetCore\u2039Quad, Quad\u203a & object | DatasetCore\u2039Quad, Quad\u203a & object)"),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Defined in ",Object(r.b)("a",Object(a.a)({parentName:"em"},{href:"https://github.com/inrupt/solid-client-js/blob/c4f2c57/src/thing/set.ts#L56"}),"thing/set.ts:56"))),Object(r.b)("p",null,"Create a new Thing with existing values replaced by the given URL for the given Property."),Object(r.b)("p",null,"To preserve existing values, see ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/solid-client-js/docs/api/modules/_thing_add_#const-addurl"}),"addUrl"),"."),Object(r.b)("p",null,"The original ",Object(r.b)("inlineCode",{parentName:"p"},"thing")," is not modified; this function returns a cloned Thing with updated values."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"thing")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"T"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Thing to set a URL value on.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"property")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"string ","|"," NamedNode\u2039string\u203a"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Property for which to set the given URL value.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"url")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"string ","|"," NamedNode\u2039string\u203a ","|"," DatasetCore\u2039Quad, Quad\u203a & object ","|"," DatasetCore\u2039Quad, Quad\u203a & object"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"URL to set on ",Object(r.b)("inlineCode",{parentName:"td"},"thing")," for the given ",Object(r.b)("inlineCode",{parentName:"td"},"property"),".")))))}p.isMDXComponent=!0},88:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return O}));var a=n(0),b=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,b=function(e,t){if(null==e)return{};var n,a,b={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(b[n]=e[n]);return b}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(b[n]=e[n])}return b}var o=b.a.createContext({}),p=function(e){var t=b.a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=p(e.components);return b.a.createElement(o.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return b.a.createElement(b.a.Fragment,{},t)}},j=b.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,o=c(e,["components","mdxType","originalType","parentName"]),d=p(n),j=a,O=d["".concat(i,".").concat(j)]||d[j]||s[j]||r;return n?b.a.createElement(O,l(l({ref:t},o),{},{components:n})):b.a.createElement(O,l({ref:t},o))}));function O(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=j;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var o=2;o<r;o++)i[o]=n[o];return b.a.createElement.apply(null,i)}return b.a.createElement.apply(null,n)}j.displayName="MDXCreateElement"}}]);