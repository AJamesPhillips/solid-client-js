(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{158:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return p}));var a=n(2),r=n(9),b=(n(0),n(171)),i={id:"_thing_remove_",title:"thing/remove",sidebar_label:"thing/remove"},l={id:"api/modules/_thing_remove_",isDocsHomePage:!1,title:"thing/remove",description:'@solid/lit-pod \u203a "thing/remove"',source:"@site/docs/api/modules/_thing_remove_.md",permalink:"/lit-pod/docs/api/modules/_thing_remove_",editUrl:"https://github.com/inrupt/lit-pod/edit/master/website/docs/api/modules/_thing_remove_.md",sidebar_label:"thing/remove",sidebar:"api",previous:{title:"thing/get",permalink:"/lit-pod/docs/api/modules/_thing_get_"},next:{title:"thing/set",permalink:"/lit-pod/docs/api/modules/_thing_set_"}},c=[{value:"Index",id:"index",children:[{value:"Functions",id:"functions",children:[]}]},{value:"Functions",id:"functions-1",children:[{value:"removeAll",id:"removeall",children:[]},{value:"<code>Const</code> removeBoolean",id:"const-removeboolean",children:[]},{value:"<code>Const</code> removeDatetime",id:"const-removedatetime",children:[]},{value:"<code>Const</code> removeDecimal",id:"const-removedecimal",children:[]},{value:"<code>Const</code> removeInteger",id:"const-removeinteger",children:[]},{value:"<code>Const</code> removeStringNoLocale",id:"const-removestringnolocale",children:[]},{value:"removeStringWithLocale",id:"removestringwithlocale",children:[]},{value:"<code>Const</code> removeUrl",id:"const-removeurl",children:[]}]}],o={rightToc:c};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(b.b)("wrapper",Object(a.a)({},o,n,{components:t,mdxType:"MDXLayout"}),Object(b.b)("p",null,Object(b.b)("a",Object(a.a)({parentName:"p"},{href:"/lit-pod/docs/api/index"}),"@solid/lit-pod")," \u203a ",Object(b.b)("a",Object(a.a)({parentName:"p"},{href:"/lit-pod/docs/api/modules/_thing_remove_"}),'"thing/remove"')),Object(b.b)("h2",{id:"index"},"Index"),Object(b.b)("h3",{id:"functions"},"Functions"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(a.a)({parentName:"li"},{href:"/lit-pod/docs/api/modules/_thing_remove_#removeall"}),"removeAll")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(a.a)({parentName:"li"},{href:"/lit-pod/docs/api/modules/_thing_remove_#const-removeboolean"}),"removeBoolean")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(a.a)({parentName:"li"},{href:"/lit-pod/docs/api/modules/_thing_remove_#const-removedatetime"}),"removeDatetime")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(a.a)({parentName:"li"},{href:"/lit-pod/docs/api/modules/_thing_remove_#const-removedecimal"}),"removeDecimal")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(a.a)({parentName:"li"},{href:"/lit-pod/docs/api/modules/_thing_remove_#const-removeinteger"}),"removeInteger")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(a.a)({parentName:"li"},{href:"/lit-pod/docs/api/modules/_thing_remove_#const-removestringnolocale"}),"removeStringNoLocale")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(a.a)({parentName:"li"},{href:"/lit-pod/docs/api/modules/_thing_remove_#removestringwithlocale"}),"removeStringWithLocale")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(a.a)({parentName:"li"},{href:"/lit-pod/docs/api/modules/_thing_remove_#const-removeurl"}),"removeUrl"))),Object(b.b)("h2",{id:"functions-1"},"Functions"),Object(b.b)("h3",{id:"removeall"},"removeAll"),Object(b.b)("p",null,"\u25b8 ",Object(b.b)("strong",{parentName:"p"},"removeAll"),"\u2039",Object(b.b)("strong",{parentName:"p"},"T"),"\u203a(",Object(b.b)("inlineCode",{parentName:"p"},"thing"),": T, ",Object(b.b)("inlineCode",{parentName:"p"},"predicate"),": ",Object(b.b)("a",Object(a.a)({parentName:"p"},{href:"/lit-pod/docs/api/modules/_interfaces_#url"}),"Url")," | ",Object(b.b)("a",Object(a.a)({parentName:"p"},{href:"/lit-pod/docs/api/modules/_interfaces_#urlstring"}),"UrlString"),"): ",Object(b.b)("em",{parentName:"p"},"T extends ThingLocal ? ThingLocal : ThingPersisted")),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Defined in ",Object(b.b)("a",Object(a.a)({parentName:"em"},{href:"https://github.com/inrupt/lit-pod/blob/ebfd7fc/src/thing/remove.ts#L55"}),"thing/remove.ts:55"))),Object(b.b)("p",null,"Create a new Thing with all values removed for the given Predicate."),Object(b.b)("p",null,"The original ",Object(b.b)("inlineCode",{parentName:"p"},"thing")," is not modified; this function returns a cloned Thing with updated values."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Type parameters:")),Object(b.b)("p",null,"\u25aa ",Object(b.b)("strong",{parentName:"p"},"T"),": ",Object(b.b)("em",{parentName:"p"},Object(b.b)("a",Object(a.a)({parentName:"em"},{href:"/lit-pod/docs/api/modules/_interfaces_#thing"}),"Thing"))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Parameters:")),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"thing")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"T"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(a.a)({parentName:"td"},{href:"/lit-pod/docs/api/modules/_interfaces_#thing"}),"Thing")," to remove values from.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"predicate")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(a.a)({parentName:"td"},{href:"/lit-pod/docs/api/modules/_interfaces_#url"}),"Url")," ","|"," ",Object(b.b)("a",Object(a.a)({parentName:"td"},{href:"/lit-pod/docs/api/modules/_interfaces_#urlstring"}),"UrlString")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Predicate for which to remove all values from the Thing.")))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," ",Object(b.b)("em",{parentName:"p"},"T extends ThingLocal ? ThingLocal : ThingPersisted")),Object(b.b)("p",null,"A new Thing equal to the input Thing with all values removed for the given Predicate."),Object(b.b)("hr",null),Object(b.b)("h3",{id:"const-removeboolean"},Object(b.b)("inlineCode",{parentName:"h3"},"Const")," removeBoolean"),Object(b.b)("p",null,"\u25b8 ",Object(b.b)("strong",{parentName:"p"},"removeBoolean"),"(",Object(b.b)("inlineCode",{parentName:"p"},"thing"),": T, ",Object(b.b)("inlineCode",{parentName:"p"},"predicate"),": string | NamedNode\u2039string\u203a, ",Object(b.b)("inlineCode",{parentName:"p"},"value"),": boolean)"),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Defined in ",Object(b.b)("a",Object(a.a)({parentName:"em"},{href:"https://github.com/inrupt/lit-pod/blob/ebfd7fc/src/thing/remove.ts#L113"}),"thing/remove.ts:113"))),Object(b.b)("p",null,"Create a new Thing with the given boolean removed for the given Predicate."),Object(b.b)("p",null,"The original ",Object(b.b)("inlineCode",{parentName:"p"},"thing")," is not modified; this function returns a cloned Thing with updated values."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Parameters:")),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"thing")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"T"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Thing to remove a boolean value from.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"predicate")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"string ","|"," NamedNode\u2039string\u203a"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Predicate for which to remove the given boolean value.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"value")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"boolean"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Boolean to remove from ",Object(b.b)("inlineCode",{parentName:"td"},"thing")," for the given ",Object(b.b)("inlineCode",{parentName:"td"},"predicate"),".")))),Object(b.b)("hr",null),Object(b.b)("h3",{id:"const-removedatetime"},Object(b.b)("inlineCode",{parentName:"h3"},"Const")," removeDatetime"),Object(b.b)("p",null,"\u25b8 ",Object(b.b)("strong",{parentName:"p"},"removeDatetime"),"(",Object(b.b)("inlineCode",{parentName:"p"},"thing"),": T, ",Object(b.b)("inlineCode",{parentName:"p"},"predicate"),": string | NamedNode\u2039string\u203a, ",Object(b.b)("inlineCode",{parentName:"p"},"value"),": Date)"),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Defined in ",Object(b.b)("a",Object(a.a)({parentName:"em"},{href:"https://github.com/inrupt/lit-pod/blob/ebfd7fc/src/thing/remove.ts#L136"}),"thing/remove.ts:136"))),Object(b.b)("p",null,"Create a new Thing with the given datetime removed for the given Predicate."),Object(b.b)("p",null,"The original ",Object(b.b)("inlineCode",{parentName:"p"},"thing")," is not modified; this function returns a cloned Thing with updated values."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Parameters:")),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"thing")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"T"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Thing to remove a datetime value from.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"predicate")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"string ","|"," NamedNode\u2039string\u203a"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Predicate for which to remove the given datetime value.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"value")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Date"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Datetime to remove from ",Object(b.b)("inlineCode",{parentName:"td"},"thing")," for the given ",Object(b.b)("inlineCode",{parentName:"td"},"predicate"),".")))),Object(b.b)("hr",null),Object(b.b)("h3",{id:"const-removedecimal"},Object(b.b)("inlineCode",{parentName:"h3"},"Const")," removeDecimal"),Object(b.b)("p",null,"\u25b8 ",Object(b.b)("strong",{parentName:"p"},"removeDecimal"),"(",Object(b.b)("inlineCode",{parentName:"p"},"thing"),": T, ",Object(b.b)("inlineCode",{parentName:"p"},"predicate"),": string | NamedNode\u2039string\u203a, ",Object(b.b)("inlineCode",{parentName:"p"},"value"),": number)"),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Defined in ",Object(b.b)("a",Object(a.a)({parentName:"em"},{href:"https://github.com/inrupt/lit-pod/blob/ebfd7fc/src/thing/remove.ts#L155"}),"thing/remove.ts:155"))),Object(b.b)("p",null,"Create a new Thing with the given decimal removed for the given Predicate."),Object(b.b)("p",null,"The original ",Object(b.b)("inlineCode",{parentName:"p"},"thing")," is not modified; this function returns a cloned Thing with updated values."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Parameters:")),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"thing")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"T"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Thing to remove a decimal value from.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"predicate")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"string ","|"," NamedNode\u2039string\u203a"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Predicate for which to remove the given decimal value.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"value")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"number"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Decimal to remove from ",Object(b.b)("inlineCode",{parentName:"td"},"thing")," for the given ",Object(b.b)("inlineCode",{parentName:"td"},"predicate"),".")))),Object(b.b)("hr",null),Object(b.b)("h3",{id:"const-removeinteger"},Object(b.b)("inlineCode",{parentName:"h3"},"Const")," removeInteger"),Object(b.b)("p",null,"\u25b8 ",Object(b.b)("strong",{parentName:"p"},"removeInteger"),"(",Object(b.b)("inlineCode",{parentName:"p"},"thing"),": T, ",Object(b.b)("inlineCode",{parentName:"p"},"predicate"),": string | NamedNode\u2039string\u203a, ",Object(b.b)("inlineCode",{parentName:"p"},"value"),": number)"),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Defined in ",Object(b.b)("a",Object(a.a)({parentName:"em"},{href:"https://github.com/inrupt/lit-pod/blob/ebfd7fc/src/thing/remove.ts#L178"}),"thing/remove.ts:178"))),Object(b.b)("p",null,"Create a new Thing with the given integer removed for the given Predicate."),Object(b.b)("p",null,"The original ",Object(b.b)("inlineCode",{parentName:"p"},"thing")," is not modified; this function returns a cloned Thing with updated values."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Parameters:")),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"thing")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"T"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Thing to remove an integer value from.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"predicate")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"string ","|"," NamedNode\u2039string\u203a"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Predicate for which to remove the given integer value.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"value")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"number"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Integer to remove from ",Object(b.b)("inlineCode",{parentName:"td"},"thing")," for the given ",Object(b.b)("inlineCode",{parentName:"td"},"predicate"),".")))),Object(b.b)("hr",null),Object(b.b)("h3",{id:"const-removestringnolocale"},Object(b.b)("inlineCode",{parentName:"h3"},"Const")," removeStringNoLocale"),Object(b.b)("p",null,"\u25b8 ",Object(b.b)("strong",{parentName:"p"},"removeStringNoLocale"),"(",Object(b.b)("inlineCode",{parentName:"p"},"thing"),": T, ",Object(b.b)("inlineCode",{parentName:"p"},"predicate"),": string | NamedNode\u2039string\u203a, ",Object(b.b)("inlineCode",{parentName:"p"},"value"),": string)"),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Defined in ",Object(b.b)("a",Object(a.a)({parentName:"em"},{href:"https://github.com/inrupt/lit-pod/blob/ebfd7fc/src/thing/remove.ts#L234"}),"thing/remove.ts:234"))),Object(b.b)("p",null,"Create a new Thing with the given unlocalised string removed for the given Predicate."),Object(b.b)("p",null,"The original ",Object(b.b)("inlineCode",{parentName:"p"},"thing")," is not modified; this function returns a cloned Thing with updated values."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Parameters:")),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"thing")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"T"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Thing to remove an unlocalised string value from.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"predicate")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"string ","|"," NamedNode\u2039string\u203a"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Predicate for which to remove the given string value.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"value")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"string"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"String to remove from ",Object(b.b)("inlineCode",{parentName:"td"},"thing")," for the given ",Object(b.b)("inlineCode",{parentName:"td"},"predicate"),".")))),Object(b.b)("hr",null),Object(b.b)("h3",{id:"removestringwithlocale"},"removeStringWithLocale"),Object(b.b)("p",null,"\u25b8 ",Object(b.b)("strong",{parentName:"p"},"removeStringWithLocale"),"\u2039",Object(b.b)("strong",{parentName:"p"},"T"),"\u203a(",Object(b.b)("inlineCode",{parentName:"p"},"thing"),": T, ",Object(b.b)("inlineCode",{parentName:"p"},"predicate"),": ",Object(b.b)("a",Object(a.a)({parentName:"p"},{href:"/lit-pod/docs/api/modules/_interfaces_#url"}),"Url")," | ",Object(b.b)("a",Object(a.a)({parentName:"p"},{href:"/lit-pod/docs/api/modules/_interfaces_#urlstring"}),"UrlString"),", ",Object(b.b)("inlineCode",{parentName:"p"},"value"),": string, ",Object(b.b)("inlineCode",{parentName:"p"},"locale"),": string): ",Object(b.b)("em",{parentName:"p"},"T extends ThingLocal ? ThingLocal : ThingPersisted")),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Defined in ",Object(b.b)("a",Object(a.a)({parentName:"em"},{href:"https://github.com/inrupt/lit-pod/blob/ebfd7fc/src/thing/remove.ts#L202"}),"thing/remove.ts:202"))),Object(b.b)("p",null,"Create a new Thing with the given localised string removed for the given Predicate."),Object(b.b)("p",null,"The original ",Object(b.b)("inlineCode",{parentName:"p"},"thing")," is not modified; this function returns a cloned Thing with updated values."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Type parameters:")),Object(b.b)("p",null,"\u25aa ",Object(b.b)("strong",{parentName:"p"},"T"),": ",Object(b.b)("em",{parentName:"p"},Object(b.b)("a",Object(a.a)({parentName:"em"},{href:"/lit-pod/docs/api/modules/_interfaces_#thing"}),"Thing"))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Parameters:")),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"thing")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"T"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Thing to remove a localised string value from.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"predicate")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(a.a)({parentName:"td"},{href:"/lit-pod/docs/api/modules/_interfaces_#url"}),"Url")," ","|"," ",Object(b.b)("a",Object(a.a)({parentName:"td"},{href:"/lit-pod/docs/api/modules/_interfaces_#urlstring"}),"UrlString")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Predicate for which to remove the given localised string value.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"value")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"string"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"String to remove from ",Object(b.b)("inlineCode",{parentName:"td"},"thing")," for the given ",Object(b.b)("inlineCode",{parentName:"td"},"predicate"),".")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"locale")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"string"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Locale of the string to remove.")))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," ",Object(b.b)("em",{parentName:"p"},"T extends ThingLocal ? ThingLocal : ThingPersisted")),Object(b.b)("p",null,"A new Thing equal to the input Thing with the given value removed for the given Predicate."),Object(b.b)("hr",null),Object(b.b)("h3",{id:"const-removeurl"},Object(b.b)("inlineCode",{parentName:"h3"},"Const")," removeUrl"),Object(b.b)("p",null,"\u25b8 ",Object(b.b)("strong",{parentName:"p"},"removeUrl"),"(",Object(b.b)("inlineCode",{parentName:"p"},"thing"),": T, ",Object(b.b)("inlineCode",{parentName:"p"},"predicate"),": string | NamedNode\u2039string\u203a, ",Object(b.b)("inlineCode",{parentName:"p"},"value"),": string | NamedNode\u2039string\u203a | DatasetCore\u2039Quad, Quad\u203a & object & object | DatasetCore\u2039Quad, Quad\u203a & object & object)"),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Defined in ",Object(b.b)("a",Object(a.a)({parentName:"em"},{href:"https://github.com/inrupt/lit-pod/blob/ebfd7fc/src/thing/remove.ts#L79"}),"thing/remove.ts:79"))),Object(b.b)("p",null,"Create a new Thing with the given URL removed for the given Predicate."),Object(b.b)("p",null,"The original ",Object(b.b)("inlineCode",{parentName:"p"},"thing")," is not modified; this function returns a cloned Thing with updated values."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Parameters:")),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"thing")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"T"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Thing to remove a URL value from.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"predicate")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"string ","|"," NamedNode\u2039string\u203a"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Predicate for which to remove the given URL value.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"value")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"string ","|"," NamedNode\u2039string\u203a ","|"," DatasetCore\u2039Quad, Quad\u203a & object & object ","|"," DatasetCore\u2039Quad, Quad\u203a & object & object"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"URL to remove from ",Object(b.b)("inlineCode",{parentName:"td"},"thing")," for the given ",Object(b.b)("inlineCode",{parentName:"td"},"predicate"),".")))))}p.isMDXComponent=!0},171:function(e,t,n){"use strict";n.d(t,"a",(function(){return m})),n.d(t,"b",(function(){return j}));var a=n(0),r=n.n(a);function b(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){b(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},b=Object.keys(e);for(a=0;a<b.length;a++)n=b[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);for(a=0;a<b.length;a++)n=b[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=r.a.createContext({}),p=function(e){var t=r.a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=p(e.components);return r.a.createElement(o.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},O=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,b=e.originalType,i=e.parentName,o=c(e,["components","mdxType","originalType","parentName"]),m=p(n),O=a,j=m["".concat(i,".").concat(O)]||m[O]||d[O]||b;return n?r.a.createElement(j,l(l({ref:t},o),{},{components:n})):r.a.createElement(j,l({ref:t},o))}));function j(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var b=n.length,i=new Array(b);i[0]=O;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var o=2;o<b;o++)i[o]=n[o];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}O.displayName="MDXCreateElement"}}]);