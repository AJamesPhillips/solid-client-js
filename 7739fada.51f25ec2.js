(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{68:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return r})),a.d(t,"metadata",(function(){return l})),a.d(t,"rightToc",(function(){return c})),a.d(t,"default",(function(){return o}));var n=a(2),b=a(6),i=(a(0),a(88)),r={id:"_thing_add_",title:"thing/add",sidebar_label:"thing/add"},l={unversionedId:"api/modules/_thing_add_",id:"api/modules/_thing_add_",isDocsHomePage:!1,title:"thing/add",description:'@inrupt/solid-client \u203a "thing/add"',source:"@site/docs/api/modules/_thing_add_.md",permalink:"/solid-client-js/docs/api/modules/_thing_add_",editUrl:"https://github.com/inrupt/solid-client-js/edit/master/website/docs/api/modules/_thing_add_.md",sidebar_label:"thing/add",sidebar:"api",previous:{title:"resource/resource",permalink:"/solid-client-js/docs/api/modules/_resource_resource_"},next:{title:"thing/get",permalink:"/solid-client-js/docs/api/modules/_thing_get_"}},c=[{value:"Index",id:"index",children:[{value:"Functions",id:"functions",children:[]}]},{value:"Functions",id:"functions-1",children:[{value:"<code>Const</code> addBoolean",id:"const-addboolean",children:[]},{value:"<code>Const</code> addDatetime",id:"const-adddatetime",children:[]},{value:"<code>Const</code> addDecimal",id:"const-adddecimal",children:[]},{value:"<code>Const</code> addInteger",id:"const-addinteger",children:[]},{value:"<code>Const</code> addStringNoLocale",id:"const-addstringnolocale",children:[]},{value:"addStringWithLocale",id:"addstringwithlocale",children:[]},{value:"<code>Const</code> addUrl",id:"const-addurl",children:[]}]}],d={rightToc:c};function o(e){var t=e.components,a=Object(b.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},d,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/solid-client-js/docs/api/index"}),"@inrupt/solid-client")," \u203a ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/solid-client-js/docs/api/modules/_thing_add_"}),'"thing/add"')),Object(i.b)("h2",{id:"index"},"Index"),Object(i.b)("h3",{id:"functions"},"Functions"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"/solid-client-js/docs/api/modules/_thing_add_#const-addboolean"}),"addBoolean")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"/solid-client-js/docs/api/modules/_thing_add_#const-adddatetime"}),"addDatetime")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"/solid-client-js/docs/api/modules/_thing_add_#const-adddecimal"}),"addDecimal")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"/solid-client-js/docs/api/modules/_thing_add_#const-addinteger"}),"addInteger")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"/solid-client-js/docs/api/modules/_thing_add_#const-addstringnolocale"}),"addStringNoLocale")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"/solid-client-js/docs/api/modules/_thing_add_#addstringwithlocale"}),"addStringWithLocale")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"/solid-client-js/docs/api/modules/_thing_add_#const-addurl"}),"addUrl"))),Object(i.b)("h2",{id:"functions-1"},"Functions"),Object(i.b)("h3",{id:"const-addboolean"},Object(i.b)("inlineCode",{parentName:"h3"},"Const")," addBoolean"),Object(i.b)("p",null,"\u25b8 ",Object(i.b)("strong",{parentName:"p"},"addBoolean"),"(",Object(i.b)("inlineCode",{parentName:"p"},"thing"),": T, ",Object(i.b)("inlineCode",{parentName:"p"},"predicate"),": string | NamedNode\u2039string\u203a, ",Object(i.b)("inlineCode",{parentName:"p"},"value"),": boolean)"),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Defined in ",Object(i.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/inrupt/solid-client-js/blob/33bb3bd/src/thing/add.ts#L81"}),"thing/add.ts:81"))),Object(i.b)("p",null,"Create a new Thing with a boolean added for a Predicate."),Object(i.b)("p",null,"This preserves existing values for the given Predicate. To replace them, see ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/solid-client-js/docs/api/modules/_thing_set_#const-setboolean"}),"setBoolean"),"."),Object(i.b)("p",null,"The original ",Object(i.b)("inlineCode",{parentName:"p"},"thing")," is not modified; this function returns a cloned Thing with updated values."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Parameters:")),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"thing")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"T"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Thing to add a boolean value to.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"predicate")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string ","|"," NamedNode\u2039string\u203a"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Predicate for which to add the given boolean value.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"value")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"boolean"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Boolean to add to ",Object(i.b)("inlineCode",{parentName:"td"},"thing")," for the given ",Object(i.b)("inlineCode",{parentName:"td"},"predicate"),".")))),Object(i.b)("hr",null),Object(i.b)("h3",{id:"const-adddatetime"},Object(i.b)("inlineCode",{parentName:"h3"},"Const")," addDatetime"),Object(i.b)("p",null,"\u25b8 ",Object(i.b)("strong",{parentName:"p"},"addDatetime"),"(",Object(i.b)("inlineCode",{parentName:"p"},"thing"),": T, ",Object(i.b)("inlineCode",{parentName:"p"},"predicate"),": string | NamedNode\u2039string\u203a, ",Object(i.b)("inlineCode",{parentName:"p"},"value"),": Date)"),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Defined in ",Object(i.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/inrupt/solid-client-js/blob/33bb3bd/src/thing/add.ts#L102"}),"thing/add.ts:102"))),Object(i.b)("p",null,"Create a new Thing with a datetime added for a Predicate."),Object(i.b)("p",null,"This preserves existing values for the given Predicate. To replace them, see ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/solid-client-js/docs/api/modules/_thing_set_#const-setdatetime"}),"setDatetime"),"."),Object(i.b)("p",null,"The original ",Object(i.b)("inlineCode",{parentName:"p"},"thing")," is not modified; this function returns a cloned Thing with updated values."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Parameters:")),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"thing")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"T"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Thing to add a datetime value to.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"predicate")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string ","|"," NamedNode\u2039string\u203a"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Predicate for which to add the given datetime value.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"value")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Date"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Datetime to add to ",Object(i.b)("inlineCode",{parentName:"td"},"thing")," for the given ",Object(i.b)("inlineCode",{parentName:"td"},"predicate"),".")))),Object(i.b)("hr",null),Object(i.b)("h3",{id:"const-adddecimal"},Object(i.b)("inlineCode",{parentName:"h3"},"Const")," addDecimal"),Object(i.b)("p",null,"\u25b8 ",Object(i.b)("strong",{parentName:"p"},"addDecimal"),"(",Object(i.b)("inlineCode",{parentName:"p"},"thing"),": T, ",Object(i.b)("inlineCode",{parentName:"p"},"predicate"),": string | NamedNode\u2039string\u203a, ",Object(i.b)("inlineCode",{parentName:"p"},"value"),": number)"),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Defined in ",Object(i.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/inrupt/solid-client-js/blob/33bb3bd/src/thing/add.ts#L123"}),"thing/add.ts:123"))),Object(i.b)("p",null,"Create a new Thing with a decimal added for a Predicate."),Object(i.b)("p",null,"This preserves existing values for the given Predicate. To replace them, see ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/solid-client-js/docs/api/modules/_thing_set_#const-setdecimal"}),"setDecimal"),"."),Object(i.b)("p",null,"The original ",Object(i.b)("inlineCode",{parentName:"p"},"thing")," is not modified; this function returns a cloned Thing with updated values."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Parameters:")),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"thing")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"T"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Thing to add a decimal value to.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"predicate")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string ","|"," NamedNode\u2039string\u203a"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Predicate for which to add the given decimal value.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"value")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"number"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Decimal to add to ",Object(i.b)("inlineCode",{parentName:"td"},"thing")," for the given ",Object(i.b)("inlineCode",{parentName:"td"},"predicate"),".")))),Object(i.b)("hr",null),Object(i.b)("h3",{id:"const-addinteger"},Object(i.b)("inlineCode",{parentName:"h3"},"Const")," addInteger"),Object(i.b)("p",null,"\u25b8 ",Object(i.b)("strong",{parentName:"p"},"addInteger"),"(",Object(i.b)("inlineCode",{parentName:"p"},"thing"),": T, ",Object(i.b)("inlineCode",{parentName:"p"},"predicate"),": string | NamedNode\u2039string\u203a, ",Object(i.b)("inlineCode",{parentName:"p"},"value"),": number)"),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Defined in ",Object(i.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/inrupt/solid-client-js/blob/33bb3bd/src/thing/add.ts#L144"}),"thing/add.ts:144"))),Object(i.b)("p",null,"Create a new Thing with an integer added for a Predicate."),Object(i.b)("p",null,"This preserves existing values for the given Predicate. To replace them, see ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/solid-client-js/docs/api/modules/_thing_set_#const-setinteger"}),"setInteger"),"."),Object(i.b)("p",null,"The original ",Object(i.b)("inlineCode",{parentName:"p"},"thing")," is not modified; this function returns a cloned Thing with updated values."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Parameters:")),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"thing")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"T"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Thing to add an integer value to.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"predicate")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string ","|"," NamedNode\u2039string\u203a"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Predicate for which to add the given integer value.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"value")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"number"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Integer to add to ",Object(i.b)("inlineCode",{parentName:"td"},"thing")," for the given ",Object(i.b)("inlineCode",{parentName:"td"},"predicate"),".")))),Object(i.b)("hr",null),Object(i.b)("h3",{id:"const-addstringnolocale"},Object(i.b)("inlineCode",{parentName:"h3"},"Const")," addStringNoLocale"),Object(i.b)("p",null,"\u25b8 ",Object(i.b)("strong",{parentName:"p"},"addStringNoLocale"),"(",Object(i.b)("inlineCode",{parentName:"p"},"thing"),": T, ",Object(i.b)("inlineCode",{parentName:"p"},"predicate"),": string | NamedNode\u2039string\u203a, ",Object(i.b)("inlineCode",{parentName:"p"},"value"),": string)"),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Defined in ",Object(i.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/inrupt/solid-client-js/blob/33bb3bd/src/thing/add.ts#L194"}),"thing/add.ts:194"))),Object(i.b)("p",null,"Create a new Thing with an unlocalised string added for a Predicate."),Object(i.b)("p",null,"This preserves existing values for the given Predicate. To replace them, see ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/solid-client-js/docs/api/modules/_thing_set_#const-setstringnolocale"}),"setStringNoLocale"),"."),Object(i.b)("p",null,"The original ",Object(i.b)("inlineCode",{parentName:"p"},"thing")," is not modified; this function returns a cloned Thing with updated values."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Parameters:")),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"thing")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"T"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Thing to add an unlocalised string value to.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"predicate")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string ","|"," NamedNode\u2039string\u203a"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Predicate for which to add the given string value.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"value")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"String to add to ",Object(i.b)("inlineCode",{parentName:"td"},"thing")," for the given ",Object(i.b)("inlineCode",{parentName:"td"},"predicate"),".")))),Object(i.b)("hr",null),Object(i.b)("h3",{id:"addstringwithlocale"},"addStringWithLocale"),Object(i.b)("p",null,"\u25b8 ",Object(i.b)("strong",{parentName:"p"},"addStringWithLocale"),"\u2039",Object(i.b)("strong",{parentName:"p"},"T"),"\u203a(",Object(i.b)("inlineCode",{parentName:"p"},"thing"),": T, ",Object(i.b)("inlineCode",{parentName:"p"},"predicate"),": ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/solid-client-js/docs/api/modules/_interfaces_#url"}),"Url")," | ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/solid-client-js/docs/api/modules/_interfaces_#urlstring"}),"UrlString"),", ",Object(i.b)("inlineCode",{parentName:"p"},"value"),": string, ",Object(i.b)("inlineCode",{parentName:"p"},"locale"),": string): ",Object(i.b)("em",{parentName:"p"},"T extends ThingLocal ? ThingLocal : ThingPersisted")),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Defined in ",Object(i.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/inrupt/solid-client-js/blob/33bb3bd/src/thing/add.ts#L166"}),"thing/add.ts:166"))),Object(i.b)("p",null,"Create a new Thing with a localised string added for a Predicate."),Object(i.b)("p",null,"This preserves existing values for the given Predicate. To replace them, see ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/solid-client-js/docs/api/modules/_thing_set_#setstringwithlocale"}),"setStringWithLocale"),"."),Object(i.b)("p",null,"The original ",Object(i.b)("inlineCode",{parentName:"p"},"thing")," is not modified; this function returns a cloned Thing with updated values."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Type parameters:")),Object(i.b)("p",null,"\u25aa ",Object(i.b)("strong",{parentName:"p"},"T"),": ",Object(i.b)("em",{parentName:"p"},Object(i.b)("a",Object(n.a)({parentName:"em"},{href:"/solid-client-js/docs/api/modules/_interfaces_#thing"}),"Thing"))),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Parameters:")),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"thing")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"T"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Thing to add a localised string value to.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"predicate")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("a",Object(n.a)({parentName:"td"},{href:"/solid-client-js/docs/api/modules/_interfaces_#url"}),"Url")," ","|"," ",Object(i.b)("a",Object(n.a)({parentName:"td"},{href:"/solid-client-js/docs/api/modules/_interfaces_#urlstring"}),"UrlString")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Predicate for which to add the given string value.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"value")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"String to add to ",Object(i.b)("inlineCode",{parentName:"td"},"thing")," for the given ",Object(i.b)("inlineCode",{parentName:"td"},"predicate"),".")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"locale")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Locale of the added string.")))),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Returns:")," ",Object(i.b)("em",{parentName:"p"},"T extends ThingLocal ? ThingLocal : ThingPersisted")),Object(i.b)("p",null,"A new Thing equal to the input Thing with the given value added for the given Predicate."),Object(i.b)("hr",null),Object(i.b)("h3",{id:"const-addurl"},Object(i.b)("inlineCode",{parentName:"h3"},"Const")," addUrl"),Object(i.b)("p",null,"\u25b8 ",Object(i.b)("strong",{parentName:"p"},"addUrl"),"(",Object(i.b)("inlineCode",{parentName:"p"},"thing"),": T, ",Object(i.b)("inlineCode",{parentName:"p"},"predicate"),": string | NamedNode\u2039string\u203a, ",Object(i.b)("inlineCode",{parentName:"p"},"url"),": string | NamedNode\u2039string\u203a | DatasetCore\u2039Quad, Quad\u203a & object | DatasetCore\u2039Quad, Quad\u203a & object)"),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Defined in ",Object(i.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/inrupt/solid-client-js/blob/33bb3bd/src/thing/add.ts#L55"}),"thing/add.ts:55"))),Object(i.b)("p",null,"Create a new Thing with a URL added for a Predicate."),Object(i.b)("p",null,"This preserves existing values for the given Predicate. To replace them, see ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/solid-client-js/docs/api/modules/_thing_set_#const-seturl"}),"setUrl"),"."),Object(i.b)("p",null,"The original ",Object(i.b)("inlineCode",{parentName:"p"},"thing")," is not modified; this function returns a cloned Thing with updated values."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Parameters:")),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"thing")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"T"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Thing to add a URL value to.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"predicate")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string ","|"," NamedNode\u2039string\u203a"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Predicate for which to add the given URL value.")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(i.b)("inlineCode",{parentName:"td"},"url")),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string ","|"," NamedNode\u2039string\u203a ","|"," DatasetCore\u2039Quad, Quad\u203a & object ","|"," DatasetCore\u2039Quad, Quad\u203a & object"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"URL to add to ",Object(i.b)("inlineCode",{parentName:"td"},"thing")," for the given ",Object(i.b)("inlineCode",{parentName:"td"},"predicate"),".")))))}o.isMDXComponent=!0},88:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return s}));var n=a(0),b=a.n(n);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,n,b=function(e,t){if(null==e)return{};var a,n,b={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(b[a]=e[a]);return b}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(b[a]=e[a])}return b}var d=b.a.createContext({}),o=function(e){var t=b.a.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=o(e.components);return b.a.createElement(d.Provider,{value:t},e.children)},j={inlineCode:"code",wrapper:function(e){var t=e.children;return b.a.createElement(b.a.Fragment,{},t)}},O=b.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,r=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),p=o(a),O=n,s=p["".concat(r,".").concat(O)]||p[O]||j[O]||i;return a?b.a.createElement(s,l(l({ref:t},d),{},{components:a})):b.a.createElement(s,l({ref:t},d))}));function s(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,r=new Array(i);r[0]=O;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:n,r[1]=l;for(var d=2;d<i;d++)r[d]=a[d];return b.a.createElement.apply(null,r)}return b.a.createElement.apply(null,a)}O.displayName="MDXCreateElement"}}]);