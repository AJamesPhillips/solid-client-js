(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{153:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return l})),a.d(t,"metadata",(function(){return r})),a.d(t,"rightToc",(function(){return s})),a.d(t,"default",(function(){return i}));var b=a(2),n=a(9),c=(a(0),a(164)),l={id:"_acl_",title:"acl",sidebar_label:"acl"},r={id:"api/modules/_acl_",title:"acl",description:'@solid/lit-pod \u203a "acl"',source:"@site/docs/api/modules/_acl_.md",permalink:"/lit-pod/docs/api/modules/_acl_",editUrl:"https://github.com/inrupt/lit-pod/edit/master/website/docs/api/modules/_acl_.md",sidebar_label:"acl",sidebar:"api",next:{title:"acl/agent",permalink:"/lit-pod/docs/api/modules/_acl_agent_"}},s=[{value:"Index",id:"index",children:[{value:"Functions",id:"functions",children:[]}]},{value:"Functions",id:"functions-1",children:[{value:"unstable_getFallbackAcl",id:"unstable_getfallbackacl",children:[]},{value:"unstable_getResourceAcl",id:"unstable_getresourceacl",children:[]},{value:"unstable_hasFallbackAcl",id:"unstable_hasfallbackacl",children:[]},{value:"unstable_hasResourceAcl",id:"unstable_hasresourceacl",children:[]}]}],p={rightToc:s};function i(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(c.b)("wrapper",Object(b.a)({},p,a,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,Object(c.b)("a",Object(b.a)({parentName:"p"},{href:"/lit-pod/docs/api/index"}),"@solid/lit-pod")," \u203a ",Object(c.b)("a",Object(b.a)({parentName:"p"},{href:"/lit-pod/docs/api/modules/_acl_"}),'"acl"')),Object(c.b)("h2",{id:"index"},"Index"),Object(c.b)("h3",{id:"functions"},"Functions"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"/lit-pod/docs/api/modules/_acl_#unstable_getfallbackacl"}),"unstable_getFallbackAcl")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"/lit-pod/docs/api/modules/_acl_#unstable_getresourceacl"}),"unstable_getResourceAcl")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"/lit-pod/docs/api/modules/_acl_#unstable_hasfallbackacl"}),"unstable_hasFallbackAcl")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"/lit-pod/docs/api/modules/_acl_#unstable_hasresourceacl"}),"unstable_hasResourceAcl"))),Object(c.b)("h2",{id:"functions-1"},"Functions"),Object(c.b)("h3",{id:"unstable_getfallbackacl"},"unstable_getFallbackAcl"),Object(c.b)("p",null,"\u25b8 ",Object(c.b)("strong",{parentName:"p"},"unstable_getFallbackAcl"),"(",Object(c.b)("inlineCode",{parentName:"p"},"resource"),": unstable",Object(c.b)("em",{parentName:"p"},"WithAcl & object): *","[unstable_AclDataset]","(/lit-pod/docs/api/modules/_interfaces"),"#unstable_acldataset)*"),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Defined in ",Object(c.b)("a",Object(b.a)({parentName:"em"},{href:"https://github.com/inrupt/lit-pod/blob/261f562/src/acl.ts#L206"}),"acl.ts:206"))),Object(c.b)("p",null,"Access the fallback ACL attached to a Resource."),Object(c.b)("p",null,"Given a Resource that has a fallback ACL attached, this function will give you access to that\nACL. To verify whether the fallback ACL is available, see ",Object(c.b)("a",Object(b.a)({parentName:"p"},{href:"/lit-pod/docs/api/modules/_acl_#unstable_hasfallbackacl"}),"unstable_hasFallbackAcl"),"."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Parameters:")),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Name"),Object(c.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Type"),Object(c.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"resource")),Object(c.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"unstable_WithAcl & object"),Object(c.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"A Resource with potentially a fallback ACL attached.")))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Returns:")," ",Object(c.b)("em",{parentName:"p"},Object(c.b)("a",Object(b.a)({parentName:"em"},{href:"/lit-pod/docs/api/modules/_interfaces_#unstable_acldataset"}),"unstable_AclDataset"))),Object(c.b)("p",null,"The fallback ACL, or null if it coult not be accessed."),Object(c.b)("p",null,"\u25b8 ",Object(c.b)("strong",{parentName:"p"},"unstable_getFallbackAcl"),"(",Object(c.b)("inlineCode",{parentName:"p"},"dataset"),": unstable",Object(c.b)("em",{parentName:"p"},"WithAcl): *","[unstable_AclDataset]","(/lit-pod/docs/api/modules/_interfaces"),"#unstable_acldataset) | null*"),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Defined in ",Object(c.b)("a",Object(b.a)({parentName:"em"},{href:"https://github.com/inrupt/lit-pod/blob/261f562/src/acl.ts#L213"}),"acl.ts:213"))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Parameters:")),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Name"),Object(c.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Type"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"dataset")),Object(c.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"unstable_WithAcl")))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Returns:")," ",Object(c.b)("em",{parentName:"p"},Object(c.b)("a",Object(b.a)({parentName:"em"},{href:"/lit-pod/docs/api/modules/_interfaces_#unstable_acldataset"}),"unstable_AclDataset")," | null")),Object(c.b)("hr",null),Object(c.b)("h3",{id:"unstable_getresourceacl"},"unstable_getResourceAcl"),Object(c.b)("p",null,"\u25b8 ",Object(c.b)("strong",{parentName:"p"},"unstable_getResourceAcl"),"(",Object(c.b)("inlineCode",{parentName:"p"},"resource"),": unstable",Object(c.b)("em",{parentName:"p"},"WithAcl & object): *","[unstable_AclDataset]","(/lit-pod/docs/api/modules/_interfaces"),"#unstable_acldataset)*"),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Defined in ",Object(c.b)("a",Object(b.a)({parentName:"em"},{href:"https://github.com/inrupt/lit-pod/blob/261f562/src/acl.ts#L156"}),"acl.ts:156"))),Object(c.b)("p",null,"Access the ACL attached to a Resource."),Object(c.b)("p",null,"Given a Resource that has an ACL attached, this function will give you access to that ACL. To\nverify whether the ACL is available, see ",Object(c.b)("a",Object(b.a)({parentName:"p"},{href:"/lit-pod/docs/api/modules/_acl_#unstable_hasresourceacl"}),"unstable_hasResourceAcl"),"."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Parameters:")),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Name"),Object(c.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Type"),Object(c.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"resource")),Object(c.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"unstable_WithAcl & object"),Object(c.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"A Resource with potentially an ACL attached.")))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Returns:")," ",Object(c.b)("em",{parentName:"p"},Object(c.b)("a",Object(b.a)({parentName:"em"},{href:"/lit-pod/docs/api/modules/_interfaces_#unstable_acldataset"}),"unstable_AclDataset"))),Object(c.b)("p",null,"The ACL, if available, and undefined if not."),Object(c.b)("p",null,"\u25b8 ",Object(c.b)("strong",{parentName:"p"},"unstable_getResourceAcl"),"(",Object(c.b)("inlineCode",{parentName:"p"},"resource"),": unstable",Object(c.b)("em",{parentName:"p"},"WithAcl): *","[unstable_AclDataset]","(/lit-pod/docs/api/modules/_interfaces"),"#unstable_acldataset) | null*"),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Defined in ",Object(c.b)("a",Object(b.a)({parentName:"em"},{href:"https://github.com/inrupt/lit-pod/blob/261f562/src/acl.ts#L163"}),"acl.ts:163"))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Parameters:")),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Name"),Object(c.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Type"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"resource")),Object(c.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"unstable_WithAcl")))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Returns:")," ",Object(c.b)("em",{parentName:"p"},Object(c.b)("a",Object(b.a)({parentName:"em"},{href:"/lit-pod/docs/api/modules/_interfaces_#unstable_acldataset"}),"unstable_AclDataset")," | null")),Object(c.b)("hr",null),Object(c.b)("h3",{id:"unstable_hasfallbackacl"},"unstable_hasFallbackAcl"),Object(c.b)("p",null,"\u25b8 ",Object(c.b)("strong",{parentName:"p"},"unstable_hasFallbackAcl"),"\u2039",Object(c.b)("strong",{parentName:"p"},"Resource"),"\u203a(",Object(c.b)("inlineCode",{parentName:"p"},"resource"),": Resource): ",Object(c.b)("em",{parentName:"p"},"resource is Resource & object")),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Defined in ",Object(c.b)("a",Object(b.a)({parentName:"em"},{href:"https://github.com/inrupt/lit-pod/blob/261f562/src/acl.ts#L187"}),"acl.ts:187"))),Object(c.b)("p",null,"Verify whether a fallback ACL was found for the given Resource."),Object(c.b)("p",null,"A Resource fetched with its ACL (e.g. using ",Object(c.b)("a",Object(b.a)({parentName:"p"},{href:"/lit-pod/docs/api/modules/_litdataset_#unstable_fetchlitdatasetwithacl"}),"unstable_fetchLitDatasetWithAcl"),") ",Object(c.b)("em",{parentName:"p"},"might")," have a fallback ACL\nattached, but we cannot be sure: the currently authenticated user (if any) might not have Control\naccess to one of the fetched Resource's Containers."),Object(c.b)("p",null,"This function verifies that the fallback ACL is accessible."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Type parameters:")),Object(c.b)("p",null,"\u25aa ",Object(c.b)("strong",{parentName:"p"},"Resource"),": ",Object(c.b)("em",{parentName:"p"},"unstable_WithAcl")),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Parameters:")),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Name"),Object(c.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Type"),Object(c.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"resource")),Object(c.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"Resource"),Object(c.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"A ",Object(c.b)("a",Object(b.a)({parentName:"td"},{href:"/lit-pod/docs/api/modules/_interfaces_#litdataset"}),"LitDataset")," that might have a fallback ACL attached.")))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Returns:")," ",Object(c.b)("em",{parentName:"p"},"resource is Resource & object")),Object(c.b)("p",null,"Whether ",Object(c.b)("inlineCode",{parentName:"p"},"dataset")," has a fallback ACL attached."),Object(c.b)("hr",null),Object(c.b)("h3",{id:"unstable_hasresourceacl"},"unstable_hasResourceAcl"),Object(c.b)("p",null,"\u25b8 ",Object(c.b)("strong",{parentName:"p"},"unstable_hasResourceAcl"),"\u2039",Object(c.b)("strong",{parentName:"p"},"Resource"),"\u203a(",Object(c.b)("inlineCode",{parentName:"p"},"resource"),": Resource): ",Object(c.b)("em",{parentName:"p"},"resource is Resource & object")),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Defined in ",Object(c.b)("a",Object(b.a)({parentName:"em"},{href:"https://github.com/inrupt/lit-pod/blob/261f562/src/acl.ts#L137"}),"acl.ts:137"))),Object(c.b)("p",null,"Verify whether an ACL was found for the given Resource."),Object(c.b)("p",null,"A Resource fetched with its ACL (e.g. using ",Object(c.b)("a",Object(b.a)({parentName:"p"},{href:"/lit-pod/docs/api/modules/_litdataset_#unstable_fetchlitdatasetwithacl"}),"unstable_fetchLitDatasetWithAcl"),") ",Object(c.b)("em",{parentName:"p"},"might")," have a resource ACL attached, but\nwe cannot be sure: it might be that none exists for this specific Resource (in which case the\nfallback ACL applies), or the currently authenticated user (if any) might not have Control access\nto the fetched Resource."),Object(c.b)("p",null,"This function verifies that the Resource's ACL is accessible."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Type parameters:")),Object(c.b)("p",null,"\u25aa ",Object(c.b)("strong",{parentName:"p"},"Resource"),": ",Object(c.b)("em",{parentName:"p"},"unstable_WithAcl")),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Parameters:")),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Name"),Object(c.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Type"),Object(c.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"resource")),Object(c.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"Resource"),Object(c.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"A Resource that might have an ACL attached.")))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Returns:")," ",Object(c.b)("em",{parentName:"p"},"resource is Resource & object")),Object(c.b)("p",null,"Whether ",Object(c.b)("inlineCode",{parentName:"p"},"dataset")," has an ACL attached."))}i.isMDXComponent=!0},164:function(e,t,a){"use strict";a.d(t,"a",(function(){return u})),a.d(t,"b",(function(){return j}));var b=a(0),n=a.n(b);function c(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);t&&(b=b.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,b)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){c(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,b,n=function(e,t){if(null==e)return{};var a,b,n={},c=Object.keys(e);for(b=0;b<c.length;b++)a=c[b],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(b=0;b<c.length;b++)a=c[b],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=n.a.createContext({}),i=function(e){var t=n.a.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},u=function(e){var t=i(e.components);return n.a.createElement(p.Provider,{value:t},e.children)},o={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},O=n.a.forwardRef((function(e,t){var a=e.components,b=e.mdxType,c=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=i(a),O=b,j=u["".concat(l,".").concat(O)]||u[O]||o[O]||c;return a?n.a.createElement(j,r(r({ref:t},p),{},{components:a})):n.a.createElement(j,r({ref:t},p))}));function j(e,t){var a=arguments,b=t&&t.mdxType;if("string"==typeof e||b){var c=a.length,l=new Array(c);l[0]=O;var r={};for(var s in t)hasOwnProperty.call(t,s)&&(r[s]=t[s]);r.originalType=e,r.mdxType="string"==typeof e?e:b,l[1]=r;for(var p=2;p<c;p++)l[p]=a[p];return n.a.createElement.apply(null,l)}return n.a.createElement.apply(null,a)}O.displayName="MDXCreateElement"}}]);