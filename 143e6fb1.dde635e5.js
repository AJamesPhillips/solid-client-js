(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{53:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return b})),a.d(t,"metadata",(function(){return s})),a.d(t,"rightToc",(function(){return r})),a.d(t,"default",(function(){return o}));var n=a(2),c=a(6),l=(a(0),a(88)),b={id:"_acl_agent_",title:"acl/agent",sidebar_label:"acl/agent"},s={unversionedId:"api/modules/_acl_agent_",id:"api/modules/_acl_agent_",isDocsHomePage:!1,title:"acl/agent",description:'@solid/lit-pod \u203a "acl/agent"',source:"@site/docs/api/modules/_acl_agent_.md",permalink:"/lit-pod/docs/api/modules/_acl_agent_",editUrl:"https://github.com/inrupt/lit-pod/edit/master/website/docs/api/modules/_acl_agent_.md",sidebar_label:"acl/agent",sidebar:"api",previous:{title:"acl/acl",permalink:"/lit-pod/docs/api/modules/_acl_acl_"},next:{title:"acl/class",permalink:"/lit-pod/docs/api/modules/_acl_class_"}},r=[{value:"Index",id:"index",children:[{value:"Type aliases",id:"type-aliases",children:[]},{value:"Functions",id:"functions",children:[]}]},{value:"Type aliases",id:"type-aliases-1",children:[{value:"unstable_AgentAccess",id:"unstable_agentaccess",children:[]}]},{value:"Functions",id:"functions-1",children:[{value:"unstable_getAgentAccessAll",id:"unstable_getagentaccessall",children:[]},{value:"unstable_getAgentAccessOne",id:"unstable_getagentaccessone",children:[]},{value:"unstable_getAgentDefaultAccessAll",id:"unstable_getagentdefaultaccessall",children:[]},{value:"unstable_getAgentDefaultAccessOne",id:"unstable_getagentdefaultaccessone",children:[]},{value:"unstable_getAgentResourceAccessAll",id:"unstable_getagentresourceaccessall",children:[]},{value:"unstable_getAgentResourceAccessOne",id:"unstable_getagentresourceaccessone",children:[]},{value:"unstable_setAgentDefaultAccess",id:"unstable_setagentdefaultaccess",children:[]},{value:"unstable_setAgentResourceAccess",id:"unstable_setagentresourceaccess",children:[]}]}],i={rightToc:r};function o(e){var t=e.components,a=Object(c.a)(e,["components"]);return Object(l.b)("wrapper",Object(n.a)({},i,a,{components:t,mdxType:"MDXLayout"}),Object(l.b)("p",null,Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/lit-pod/docs/api/index"}),"@solid/lit-pod")," \u203a ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/lit-pod/docs/api/modules/_acl_agent_"}),'"acl/agent"')),Object(l.b)("h2",{id:"index"},"Index"),Object(l.b)("h3",{id:"type-aliases"},"Type aliases"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"/lit-pod/docs/api/modules/_acl_agent_#unstable_agentaccess"}),"unstable_AgentAccess"))),Object(l.b)("h3",{id:"functions"},"Functions"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"/lit-pod/docs/api/modules/_acl_agent_#unstable_getagentaccessall"}),"unstable_getAgentAccessAll")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"/lit-pod/docs/api/modules/_acl_agent_#unstable_getagentaccessone"}),"unstable_getAgentAccessOne")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"/lit-pod/docs/api/modules/_acl_agent_#unstable_getagentdefaultaccessall"}),"unstable_getAgentDefaultAccessAll")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"/lit-pod/docs/api/modules/_acl_agent_#unstable_getagentdefaultaccessone"}),"unstable_getAgentDefaultAccessOne")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"/lit-pod/docs/api/modules/_acl_agent_#unstable_getagentresourceaccessall"}),"unstable_getAgentResourceAccessAll")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"/lit-pod/docs/api/modules/_acl_agent_#unstable_getagentresourceaccessone"}),"unstable_getAgentResourceAccessOne")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"/lit-pod/docs/api/modules/_acl_agent_#unstable_setagentdefaultaccess"}),"unstable_setAgentDefaultAccess")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"/lit-pod/docs/api/modules/_acl_agent_#unstable_setagentresourceaccess"}),"unstable_setAgentResourceAccess"))),Object(l.b)("h2",{id:"type-aliases-1"},"Type aliases"),Object(l.b)("h3",{id:"unstable_agentaccess"},"unstable_AgentAccess"),Object(l.b)("p",null,"\u01ac ",Object(l.b)("strong",{parentName:"p"},"unstable_AgentAccess"),": ",Object(l.b)("em",{parentName:"p"},"Record\u2039",Object(l.b)("a",Object(n.a)({parentName:"em"},{href:"/lit-pod/docs/api/modules/_interfaces_#webid"}),"WebId"),", ",Object(l.b)("a",Object(n.a)({parentName:"em"},{href:"/lit-pod/docs/api/modules/_interfaces_#unstable_access"}),"unstable_Access"),"\u203a")),Object(l.b)("p",null,Object(l.b)("em",{parentName:"p"},"Defined in ",Object(l.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/inrupt/solid-client-js/blob/0decc68/src/acl/agent.ts#L54"}),"acl/agent.ts:54"))),Object(l.b)("h2",{id:"functions-1"},"Functions"),Object(l.b)("h3",{id:"unstable_getagentaccessall"},"unstable_getAgentAccessAll"),Object(l.b)("p",null,"\u25b8 ",Object(l.b)("strong",{parentName:"p"},"unstable_getAgentAccessAll"),"(",Object(l.b)("inlineCode",{parentName:"p"},"resourceInfo"),": unstable",Object(l.b)("em",{parentName:"p"},"WithAcl & ","[WithResourceInfo]","(/lit-pod/docs/api/modules/_interfaces"),"#withresourceinfo)): ",Object(l.b)("em",{parentName:"p"},Object(l.b)("a",Object(n.a)({parentName:"em"},{href:"/lit-pod/docs/api/modules/_acl_agent_#unstable_agentaccess"}),"unstable_AgentAccess")," | null")),Object(l.b)("p",null,Object(l.b)("em",{parentName:"p"},"Defined in ",Object(l.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/inrupt/solid-client-js/blob/0decc68/src/acl/agent.ts#L96"}),"acl/agent.ts:96"))),Object(l.b)("p",null,"Find out what Access Modes have been granted to specific Agents for a given Resource."),Object(l.b)("p",null,"Keep in mind that this function will not tell you what access arbitrary Agents might have through other ACL rules, e.g. public or group-specific permissions."),Object(l.b)("p",null,"Also, please note that this function is still experimental: its API can change in non-major releases."),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Parameters:")),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"resourceInfo")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"unstable",Object(l.b)("em",{parentName:"td"},"WithAcl & ","[WithResourceInfo]","(/lit-pod/docs/api/modules/_interfaces"),"#withresourceinfo)"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Information about the Resource to which Agents may have been granted access.")))),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Returns:")," ",Object(l.b)("em",{parentName:"p"},Object(l.b)("a",Object(n.a)({parentName:"em"},{href:"/lit-pod/docs/api/modules/_acl_agent_#unstable_agentaccess"}),"unstable_AgentAccess")," | null")),Object(l.b)("p",null,"Which Access Modes have been granted to which Agents specifically for the given LitDataset, or ",Object(l.b)("inlineCode",{parentName:"p"},"null")," if it could not be determined (e.g. because the current user does not have Control Access to a given Resource or its Container)."),Object(l.b)("hr",null),Object(l.b)("h3",{id:"unstable_getagentaccessone"},"unstable_getAgentAccessOne"),Object(l.b)("p",null,"\u25b8 ",Object(l.b)("strong",{parentName:"p"},"unstable_getAgentAccessOne"),"(",Object(l.b)("inlineCode",{parentName:"p"},"resourceInfo"),": unstable",Object(l.b)("em",{parentName:"p"},"WithAcl & ","[WithResourceInfo]","(/lit-pod/docs/api/modules/_interfaces"),"#withresourceinfo), ",Object(l.b)("inlineCode",{parentName:"p"},"agent"),": ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/lit-pod/docs/api/modules/_interfaces_#webid"}),"WebId"),"): ",Object(l.b)("em",{parentName:"p"},Object(l.b)("a",Object(n.a)({parentName:"em"},{href:"/lit-pod/docs/api/modules/_interfaces_#unstable_access"}),"unstable_Access")," | null")),Object(l.b)("p",null,Object(l.b)("em",{parentName:"p"},"Defined in ",Object(l.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/inrupt/solid-client-js/blob/0decc68/src/acl/agent.ts#L67"}),"acl/agent.ts:67"))),Object(l.b)("p",null,"Find out what Access Modes have been granted to a given Agent specifically for a given Resource."),Object(l.b)("p",null,"Keep in mind that this function will not tell you what access the given Agent has through other ACL rules, e.g. public or group-specific permissions."),Object(l.b)("p",null,"Also, please note that this function is still experimental: its API can change in non-major releases."),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Parameters:")),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"resourceInfo")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"unstable",Object(l.b)("em",{parentName:"td"},"WithAcl & ","[WithResourceInfo]","(/lit-pod/docs/api/modules/_interfaces"),"#withresourceinfo)"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Information about the Resource to which the given Agent may have been granted access.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"agent")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("a",Object(n.a)({parentName:"td"},{href:"/lit-pod/docs/api/modules/_interfaces_#webid"}),"WebId")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"WebID of the Agent for which to retrieve what access it has to the Resource.")))),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Returns:")," ",Object(l.b)("em",{parentName:"p"},Object(l.b)("a",Object(n.a)({parentName:"em"},{href:"/lit-pod/docs/api/modules/_interfaces_#unstable_access"}),"unstable_Access")," | null")),Object(l.b)("p",null,"Which Access Modes have been granted to the Agent specifically for the given LitDataset, or ",Object(l.b)("inlineCode",{parentName:"p"},"null")," if it could not be determined (e.g. because the current user does not have Control Access to a given Resource or its Container)."),Object(l.b)("hr",null),Object(l.b)("h3",{id:"unstable_getagentdefaultaccessall"},"unstable_getAgentDefaultAccessAll"),Object(l.b)("p",null,"\u25b8 ",Object(l.b)("strong",{parentName:"p"},"unstable_getAgentDefaultAccessAll"),"(",Object(l.b)("inlineCode",{parentName:"p"},"aclDataset"),": ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/lit-pod/docs/api/modules/_interfaces_#unstable_acldataset"}),"unstable_AclDataset"),"): ",Object(l.b)("em",{parentName:"p"},Object(l.b)("a",Object(n.a)({parentName:"em"},{href:"/lit-pod/docs/api/modules/_acl_agent_#unstable_agentaccess"}),"unstable_AgentAccess"))),Object(l.b)("p",null,Object(l.b)("em",{parentName:"p"},"Defined in ",Object(l.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/inrupt/solid-client-js/blob/0decc68/src/acl/agent.ts#L251"}),"acl/agent.ts:251"))),Object(l.b)("p",null,"Given an ACL LitDataset, find out which access modes it provides to specific Agents for the associated Container Resource's child Resources."),Object(l.b)("p",null,"Keep in mind that this function will not tell you:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"what access arbitrary Agents might have been given through other ACL rules, e.g. public or group-specific permissions."),Object(l.b)("li",{parentName:"ul"},"what access arbitrary Agents have to the Container Resource itself (see ",Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"/lit-pod/docs/api/modules/_acl_agent_#unstable_getagentresourceaccessall"}),"unstable_getAgentResourceAccessAll")," for that).")),Object(l.b)("p",null,"Also, please note that this function is still experimental: its API can change in non-major releases."),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Parameters:")),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"aclDataset")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("a",Object(n.a)({parentName:"td"},{href:"/lit-pod/docs/api/modules/_interfaces_#unstable_acldataset"}),"unstable_AclDataset")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The LitDataset that contains Access-Control List rules.")))),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Returns:")," ",Object(l.b)("em",{parentName:"p"},Object(l.b)("a",Object(n.a)({parentName:"em"},{href:"/lit-pod/docs/api/modules/_acl_agent_#unstable_agentaccess"}),"unstable_AgentAccess"))),Object(l.b)("p",null,"Which Access Modes have been granted to which Agents specifically for the children of the Container associated with the given ACL LitDataset."),Object(l.b)("hr",null),Object(l.b)("h3",{id:"unstable_getagentdefaultaccessone"},"unstable_getAgentDefaultAccessOne"),Object(l.b)("p",null,"\u25b8 ",Object(l.b)("strong",{parentName:"p"},"unstable_getAgentDefaultAccessOne"),"(",Object(l.b)("inlineCode",{parentName:"p"},"aclDataset"),": ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/lit-pod/docs/api/modules/_interfaces_#unstable_acldataset"}),"unstable_AclDataset"),", ",Object(l.b)("inlineCode",{parentName:"p"},"agent"),": ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/lit-pod/docs/api/modules/_interfaces_#webid"}),"WebId"),"): ",Object(l.b)("em",{parentName:"p"},Object(l.b)("a",Object(n.a)({parentName:"em"},{href:"/lit-pod/docs/api/modules/_interfaces_#unstable_access"}),"unstable_Access"))),Object(l.b)("p",null,Object(l.b)("em",{parentName:"p"},"Defined in ",Object(l.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/inrupt/solid-client-js/blob/0decc68/src/acl/agent.ts#L225"}),"acl/agent.ts:225"))),Object(l.b)("p",null,"Given an ACL LitDataset, find out which access modes it provides to an Agent for the associated Container Resource's child Resources."),Object(l.b)("p",null,"Keep in mind that this function will not tell you:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"what access the given Agent has through other ACL rules, e.g. public or group-specific permissions."),Object(l.b)("li",{parentName:"ul"},"what access the given Agent has to the Container Resource itself (see ",Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"/lit-pod/docs/api/modules/_acl_agent_#unstable_getagentresourceaccessone"}),"unstable_getAgentResourceAccessOne")," for that).")),Object(l.b)("p",null,"Also, please note that this function is still experimental: its API can change in non-major releases."),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Parameters:")),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"aclDataset")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("a",Object(n.a)({parentName:"td"},{href:"/lit-pod/docs/api/modules/_interfaces_#unstable_acldataset"}),"unstable_AclDataset")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The LitDataset that contains Access-Control List rules for a certain Container.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"agent")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("a",Object(n.a)({parentName:"td"},{href:"/lit-pod/docs/api/modules/_interfaces_#webid"}),"WebId")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"WebID of the Agent for which to retrieve what access it has to the Container's children.")))),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Returns:")," ",Object(l.b)("em",{parentName:"p"},Object(l.b)("a",Object(n.a)({parentName:"em"},{href:"/lit-pod/docs/api/modules/_interfaces_#unstable_access"}),"unstable_Access"))),Object(l.b)("p",null,"Which Access Modes have been granted to the Agent specifically for the children of the Container associated with the given ACL LitDataset."),Object(l.b)("hr",null),Object(l.b)("h3",{id:"unstable_getagentresourceaccessall"},"unstable_getAgentResourceAccessAll"),Object(l.b)("p",null,"\u25b8 ",Object(l.b)("strong",{parentName:"p"},"unstable_getAgentResourceAccessAll"),"(",Object(l.b)("inlineCode",{parentName:"p"},"aclDataset"),": ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/lit-pod/docs/api/modules/_interfaces_#unstable_acldataset"}),"unstable_AclDataset"),"): ",Object(l.b)("em",{parentName:"p"},Object(l.b)("a",Object(n.a)({parentName:"em"},{href:"/lit-pod/docs/api/modules/_acl_agent_#unstable_agentaccess"}),"unstable_AgentAccess"))),Object(l.b)("p",null,Object(l.b)("em",{parentName:"p"},"Defined in ",Object(l.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/inrupt/solid-client-js/blob/0decc68/src/acl/agent.ts#L149"}),"acl/agent.ts:149"))),Object(l.b)("p",null,"Given an ACL LitDataset, find out which access modes it provides to specific Agents for the associated Resource."),Object(l.b)("p",null,"Keep in mind that this function will not tell you:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"what access arbitrary Agents might have been given through other ACL rules, e.g. public or group-specific permissions."),Object(l.b)("li",{parentName:"ul"},"what access arbitrary Agents have to child Resources, in case the associated Resource is a Container.")),Object(l.b)("p",null,"Also, please note that this function is still experimental: its API can change in non-major releases."),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Parameters:")),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"aclDataset")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("a",Object(n.a)({parentName:"td"},{href:"/lit-pod/docs/api/modules/_interfaces_#unstable_acldataset"}),"unstable_AclDataset")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The LitDataset that contains Access-Control List rules.")))),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Returns:")," ",Object(l.b)("em",{parentName:"p"},Object(l.b)("a",Object(n.a)({parentName:"em"},{href:"/lit-pod/docs/api/modules/_acl_agent_#unstable_agentaccess"}),"unstable_AgentAccess"))),Object(l.b)("p",null,"Which Access Modes have been granted to which Agents specifically for the Resource the given ACL LitDataset is associated with."),Object(l.b)("hr",null),Object(l.b)("h3",{id:"unstable_getagentresourceaccessone"},"unstable_getAgentResourceAccessOne"),Object(l.b)("p",null,"\u25b8 ",Object(l.b)("strong",{parentName:"p"},"unstable_getAgentResourceAccessOne"),"(",Object(l.b)("inlineCode",{parentName:"p"},"aclDataset"),": ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/lit-pod/docs/api/modules/_interfaces_#unstable_acldataset"}),"unstable_AclDataset"),", ",Object(l.b)("inlineCode",{parentName:"p"},"agent"),": ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/lit-pod/docs/api/modules/_interfaces_#webid"}),"WebId"),"): ",Object(l.b)("em",{parentName:"p"},Object(l.b)("a",Object(n.a)({parentName:"em"},{href:"/lit-pod/docs/api/modules/_interfaces_#unstable_access"}),"unstable_Access"))),Object(l.b)("p",null,Object(l.b)("em",{parentName:"p"},"Defined in ",Object(l.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/inrupt/solid-client-js/blob/0decc68/src/acl/agent.ts#L123"}),"acl/agent.ts:123"))),Object(l.b)("p",null,"Given an ACL LitDataset, find out which access modes it provides to an Agent for its associated Resource."),Object(l.b)("p",null,"Keep in mind that this function will not tell you:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"what access the given Agent has through other ACL rules, e.g. public or group-specific permissions."),Object(l.b)("li",{parentName:"ul"},"what access the given Agent has to child Resources, in case the associated Resource is a Container (see [","[unstable_getAgentDefaultAccessModesOne]","] for that).")),Object(l.b)("p",null,"Also, please note that this function is still experimental: its API can change in non-major releases."),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Parameters:")),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"aclDataset")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("a",Object(n.a)({parentName:"td"},{href:"/lit-pod/docs/api/modules/_interfaces_#unstable_acldataset"}),"unstable_AclDataset")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The LitDataset that contains Access-Control List rules.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"agent")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("a",Object(n.a)({parentName:"td"},{href:"/lit-pod/docs/api/modules/_interfaces_#webid"}),"WebId")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"WebID of the Agent for which to retrieve what access it has to the Resource.")))),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Returns:")," ",Object(l.b)("em",{parentName:"p"},Object(l.b)("a",Object(n.a)({parentName:"em"},{href:"/lit-pod/docs/api/modules/_interfaces_#unstable_access"}),"unstable_Access"))),Object(l.b)("p",null,"Which Access Modes have been granted to the Agent specifically for the Resource the given ACL LitDataset is associated with."),Object(l.b)("hr",null),Object(l.b)("h3",{id:"unstable_setagentdefaultaccess"},"unstable_setAgentDefaultAccess"),Object(l.b)("p",null,"\u25b8 ",Object(l.b)("strong",{parentName:"p"},"unstable_setAgentDefaultAccess"),"(",Object(l.b)("inlineCode",{parentName:"p"},"aclDataset"),": ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/lit-pod/docs/api/modules/_interfaces_#unstable_acldataset"}),"unstable_AclDataset"),", ",Object(l.b)("inlineCode",{parentName:"p"},"agent"),": ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/lit-pod/docs/api/modules/_interfaces_#webid"}),"WebId"),", ",Object(l.b)("inlineCode",{parentName:"p"},"access"),": ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/lit-pod/docs/api/modules/_interfaces_#unstable_access"}),"unstable_Access"),"): ",Object(l.b)("em",{parentName:"p"},Object(l.b)("a",Object(n.a)({parentName:"em"},{href:"/lit-pod/docs/api/modules/_interfaces_#unstable_acldataset"}),"unstable_AclDataset")," & WithChangeLog")),Object(l.b)("p",null,Object(l.b)("em",{parentName:"p"},"Defined in ",Object(l.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/inrupt/solid-client-js/blob/0decc68/src/acl/agent.ts#L280"}),"acl/agent.ts:280"))),Object(l.b)("p",null,"Given an ACL LitDataset, modify the ACL Rules to set specific default Access Modes for a given Agent."),Object(l.b)("p",null,"If the given ACL LitDataset already includes ACL Rules that grant a certain set of default Access Modes\nto the given Agent, those will be overridden by the given Access Modes."),Object(l.b)("p",null,"Keep in mind that this function will not modify:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"access arbitrary Agents might have been given through other ACL rules, e.g. public or group-specific permissions."),Object(l.b)("li",{parentName:"ul"},"what access arbitrary Agents have to the Container itself.")),Object(l.b)("p",null,"Also, please note that this function is still experimental: its API can change in non-major releases."),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Parameters:")),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"aclDataset")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("a",Object(n.a)({parentName:"td"},{href:"/lit-pod/docs/api/modules/_interfaces_#unstable_acldataset"}),"unstable_AclDataset")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The LitDataset that contains Access-Control List rules.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"agent")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("a",Object(n.a)({parentName:"td"},{href:"/lit-pod/docs/api/modules/_interfaces_#webid"}),"WebId")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The Agent to grant specific Access Modes.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"access")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("a",Object(n.a)({parentName:"td"},{href:"/lit-pod/docs/api/modules/_interfaces_#unstable_access"}),"unstable_Access")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The Access Modes to grant to the Agent.")))),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Returns:")," ",Object(l.b)("em",{parentName:"p"},Object(l.b)("a",Object(n.a)({parentName:"em"},{href:"/lit-pod/docs/api/modules/_interfaces_#unstable_acldataset"}),"unstable_AclDataset")," & WithChangeLog")),Object(l.b)("hr",null),Object(l.b)("h3",{id:"unstable_setagentresourceaccess"},"unstable_setAgentResourceAccess"),Object(l.b)("p",null,"\u25b8 ",Object(l.b)("strong",{parentName:"p"},"unstable_setAgentResourceAccess"),"(",Object(l.b)("inlineCode",{parentName:"p"},"aclDataset"),": ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/lit-pod/docs/api/modules/_interfaces_#unstable_acldataset"}),"unstable_AclDataset"),", ",Object(l.b)("inlineCode",{parentName:"p"},"agent"),": ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/lit-pod/docs/api/modules/_interfaces_#webid"}),"WebId"),", ",Object(l.b)("inlineCode",{parentName:"p"},"access"),": ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/lit-pod/docs/api/modules/_interfaces_#unstable_access"}),"unstable_Access"),"): ",Object(l.b)("em",{parentName:"p"},Object(l.b)("a",Object(n.a)({parentName:"em"},{href:"/lit-pod/docs/api/modules/_interfaces_#unstable_acldataset"}),"unstable_AclDataset")," & WithChangeLog")),Object(l.b)("p",null,Object(l.b)("em",{parentName:"p"},"Defined in ",Object(l.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/inrupt/solid-client-js/blob/0decc68/src/acl/agent.ts#L177"}),"acl/agent.ts:177"))),Object(l.b)("p",null,"Given an ACL LitDataset, modify the ACL Rules to set specific Access Modes for a given Agent."),Object(l.b)("p",null,"If the given ACL LitDataset already includes ACL Rules that grant a certain set of Access Modes\nto the given Agent, those will be overridden by the given Access Modes."),Object(l.b)("p",null,"Keep in mind that this function will not modify:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"access arbitrary Agents might have been given through other ACL rules, e.g. public or group-specific permissions."),Object(l.b)("li",{parentName:"ul"},"what access arbitrary Agents have to child Resources.")),Object(l.b)("p",null,"Also, please note that this function is still experimental: its API can change in non-major releases."),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Parameters:")),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"aclDataset")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("a",Object(n.a)({parentName:"td"},{href:"/lit-pod/docs/api/modules/_interfaces_#unstable_acldataset"}),"unstable_AclDataset")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The LitDataset that contains Access-Control List rules.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"agent")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("a",Object(n.a)({parentName:"td"},{href:"/lit-pod/docs/api/modules/_interfaces_#webid"}),"WebId")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The Agent to grant specific Access Modes.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("inlineCode",{parentName:"td"},"access")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(l.b)("a",Object(n.a)({parentName:"td"},{href:"/lit-pod/docs/api/modules/_interfaces_#unstable_access"}),"unstable_Access")),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The Access Modes to grant to the Agent.")))),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Returns:")," ",Object(l.b)("em",{parentName:"p"},Object(l.b)("a",Object(n.a)({parentName:"em"},{href:"/lit-pod/docs/api/modules/_interfaces_#unstable_acldataset"}),"unstable_AclDataset")," & WithChangeLog")))}o.isMDXComponent=!0},88:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return O}));var n=a(0),c=a.n(n);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function b(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?b(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):b(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function r(e,t){if(null==e)return{};var a,n,c=function(e,t){if(null==e)return{};var a,n,c={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(c[a]=e[a]);return c}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(c[a]=e[a])}return c}var i=c.a.createContext({}),o=function(e){var t=c.a.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},p=function(e){var t=o(e.components);return c.a.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return c.a.createElement(c.a.Fragment,{},t)}},d=c.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,b=e.parentName,i=r(e,["components","mdxType","originalType","parentName"]),p=o(a),d=n,O=p["".concat(b,".").concat(d)]||p[d]||u[d]||l;return a?c.a.createElement(O,s(s({ref:t},i),{},{components:a})):c.a.createElement(O,s({ref:t},i))}));function O(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,b=new Array(l);b[0]=d;var s={};for(var r in t)hasOwnProperty.call(t,r)&&(s[r]=t[r]);s.originalType=e,s.mdxType="string"==typeof e?e:n,b[1]=s;for(var i=2;i<l;i++)b[i]=a[i];return c.a.createElement.apply(null,b)}return c.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"}}]);